{"ast":null,"code":"var _jsxFileName = \"/home/yash/programming/django_proj/iTweet/react-app/src/tweets/components.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { listTweet } from \"../lookup/index.js\";\nexport function TweetComponent(props) {\n  const textAreaRef = React.createRef();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    textAreaRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"my-5\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Tweet Now\"))), /*#__PURE__*/React.createElement(TweetsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        console.log(\"possibly you didn't start the django server\");\n        alert(\"There was an error, ok-\", status);\n      }\n    };\n\n    listTweet(myCallback);\n  }, []);\n  return tweetsInit.map((tweet, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: tweet,\n      className: \"my-5 py-5 border bg-white col-10\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  console.log(tweet.userLike); // TODO: tweet.userLike is undefined\n\n  const [likes, setLikes] = useState(tweet.likes);\n  const [justClicked, setJustClicked] = useState(tweet.userLike === true ? true : false);\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === \"like\") {\n      if (justClicked === false) {\n        setJustClicked(true);\n        setLikes(likes + 1);\n      } else {\n        setJustClicked(false);\n        setLikes(likes - 1);\n      }\n    }\n  };\n\n  const display = action.type === \"like\" ? `${likes} Likes` : `${action.display}`;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const tweet = props.tweet;\n  const className = props.className;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, tweet.context), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/yash/programming/django_proj/iTweet/react-app/src/tweets/components.js"],"names":["React","useEffect","useState","listTweet","TweetComponent","props","textAreaRef","createRef","handleSubmit","event","preventDefault","newVal","current","value","TweetsList","tweetsInit","setTweetsInit","myCallback","response","status","console","log","alert","map","tweet","index","ActionBtn","action","userLike","likes","setLikes","justClicked","setJustClicked","handleClick","type","display","Tweet","className","context"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { listTweet } from \"../lookup/index.js\";\n\nexport function TweetComponent(props) {\n  const textAreaRef = React.createRef();\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    textAreaRef.current.value = \"\";\n  };\n  return (\n    <div>\n      <form className=\"my-5\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <textarea\n            ref={textAreaRef}\n            required\n            className=\"form-control\"\n          ></textarea>\n        </div>\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Tweet Now\n          </button>\n        </div>\n      </form>\n      <TweetsList />\n    </div>\n  );\n}\n\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        console.log(\"possibly you didn't start the django server\");\n        alert(\"There was an error, ok-\", status);\n      }\n    };\n    listTweet(myCallback);\n  }, []);\n  return tweetsInit.map((tweet, index) => {\n    return (\n      <Tweet\n        tweet={tweet}\n        className=\"my-5 py-5 border bg-white col-10\"\n        key={index}\n      />\n    );\n  });\n}\n\nexport function ActionBtn(props) {\n  const { tweet, action } = props;\n  console.log(tweet.userLike);\n  // TODO: tweet.userLike is undefined\n  const [likes, setLikes] = useState(tweet.likes);\n  const [justClicked, setJustClicked] = useState(\n    tweet.userLike === true ? true : false\n  );\n  const handleClick = (event) => {\n    event.preventDefault();\n    if (action.type === \"like\") {\n      if (justClicked === false) {\n        setJustClicked(true);\n        setLikes(likes + 1);\n      } else {\n        setJustClicked(false);\n        setLikes(likes - 1);\n      }\n    }\n  };\n\n  const display =\n    action.type === \"like\" ? `${likes} Likes` : `${action.display}`;\n  return (\n    <button onClick={handleClick} className=\"btn btn-primary\">\n      {display}\n    </button>\n  );\n}\n\nexport function Tweet(props) {\n  const tweet = props.tweet;\n  const className = props.className;\n  return (\n    <div className={className}>\n      <p className=\"text-dark\">{tweet.context}</p>\n      <div className=\"btn btn-group\">\n        <ActionBtn tweet={tweet} action={{ type: \"like\", display: \"Likes\" }} />\n        <ActionBtn\n          tweet={tweet}\n          action={{ type: \"unlike\", display: \"Unlike\" }}\n        />\n        <ActionBtn\n          tweet={tweet}\n          action={{ type: \"retweet\", display: \"Retweet\" }}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}