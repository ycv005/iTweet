{"ast":null,"code":"var _jsxFileName = \"/home/yash/programming/django_proj/iTweet/react-app/src/tweets/components.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { listTweet } from \"../lookup/index.js\";\nexport function TweetsList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    listTweet(myCallback);\n  }, []);\n  return tweets.map((tweet, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: tweet,\n      className: \"my-5 py-5 border bg-white col-10\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  let [likes, setLikes] = useState(tweet.likes);\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === \"like\") {\n      setLikes(likes + 1);\n    }\n  };\n\n  const display = action.type === \"like\" ? `${likes} Likes` : `${action.display}`;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const tweet = props.tweet;\n  const className = props.className;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, tweet.context), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/yash/programming/django_proj/iTweet/react-app/src/tweets/components.js"],"names":["React","useEffect","useState","listTweet","TweetsList","props","tweets","setTweets","myCallback","response","status","alert","map","tweet","index","ActionBtn","action","likes","setLikes","handleClick","event","preventDefault","type","display","Tweet","className","context"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { listTweet } from \"../lookup/index.js\";\n\nexport function TweetsList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n    listTweet(myCallback);\n  }, []);\n  return tweets.map((tweet, index) => {\n    return (\n      <Tweet\n        tweet={tweet}\n        className=\"my-5 py-5 border bg-white col-10\"\n        key={index}\n      />\n    );\n  });\n}\n\nexport function ActionBtn(props) {\n  const { tweet, action } = props;\n  let [likes, setLikes] = useState(tweet.likes);\n  const handleClick = (event) => {\n    event.preventDefault();\n    if (action.type === \"like\") {\n      setLikes(likes + 1);\n    }\n  };\n\n  const display =\n    action.type === \"like\" ? `${likes} Likes` : `${action.display}`;\n  return (\n    <button onClick={handleClick} className=\"btn btn-primary\">\n      {display}\n    </button>\n  );\n}\n\nexport function Tweet(props) {\n  const tweet = props.tweet;\n  const className = props.className;\n  return (\n    <div className={className}>\n      <p className=\"text-dark\">{tweet.context}</p>\n      <div className=\"btn btn-group\">\n        <ActionBtn tweet={tweet} action={{ type: \"like\", display: \"Likes\" }} />\n        <ActionBtn\n          tweet={tweet}\n          action={{ type: \"unlike\", display: \"Unlike\" }}\n        />\n        <ActionBtn\n          tweet={tweet}\n          action={{ type: \"retweet\", display: \"Retweet\" }}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}