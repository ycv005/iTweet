{"ast":null,"code":"var _jsxFileName = \"/home/yash/programming/django_proj/iTweet/react-app/src/tweets/components.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { createTweet, listTweet } from \"../lookup/index.js\";\nexport function TweetComponent(props) {\n  console.log(\"here is the tweet componenet\");\n  const [newTweets, setNewTweets] = useState([]);\n  const textAreaRef = React.createRef();\n  var tempTweet;\n\n  const handleSubmit = event => {\n    console.log(\"handing submit tweet\");\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    tempTweet = [...newTweets];\n    createTweet(newVal, (response, status) => {\n      if (status === 201) {\n        console.log(`${status} in the create tweeet`);\n        tempTweet.unshift(response);\n      } else {\n        alert(\"Error occured while posting tweet\");\n        console.log(response);\n      }\n    });\n    setNewTweets(tempTweet);\n    textAreaRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"my-5\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Tweet Now\"))), /*#__PURE__*/React.createElement(TweetsList, {\n    newTweets: newTweets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\nexport function TweetsList(props) {\n  console.log(\"calling tweet list\");\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          console.log(\"possibly you didn't start the server\");\n          alert(\"There was an error, ok-\", status);\n        }\n      };\n\n      listTweet(myCallback);\n    }\n  }, [setTweetsInit, tweetsDidSet, setTweetsDidSet]);\n  return tweets.map((tweet, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: tweet,\n      className: \"my-5 py-5 border bg-white col-10\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes);\n  const [justClicked, setJustClicked] = useState(tweet.userLike === true ? true : false);\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === \"like\") {\n      if (justClicked === false) {\n        setJustClicked(true);\n        setLikes(likes + 1);\n      } else {\n        setJustClicked(false);\n        setLikes(likes - 1);\n      }\n    }\n  };\n\n  const display = action.type === \"like\" ? `${likes} Likes` : `${action.display}`;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const tweet = props.tweet;\n  const className = props.className;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, tweet.context), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/yash/programming/django_proj/iTweet/react-app/src/tweets/components.js"],"names":["React","useEffect","useState","createTweet","listTweet","TweetComponent","props","console","log","newTweets","setNewTweets","textAreaRef","createRef","tempTweet","handleSubmit","event","preventDefault","newVal","current","value","response","status","unshift","alert","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","myCallback","map","tweet","index","ActionBtn","action","likes","setLikes","justClicked","setJustClicked","userLike","handleClick","type","display","Tweet","className","context"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createTweet, listTweet } from \"../lookup/index.js\";\n\nexport function TweetComponent(props) {\n  console.log(\"here is the tweet componenet\");\n  const [newTweets, setNewTweets] = useState([]);\n  const textAreaRef = React.createRef();\n  var tempTweet;\n  const handleSubmit = (event) => {\n    console.log(\"handing submit tweet\");\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    tempTweet = [...newTweets];\n    createTweet(newVal, (response, status) => {\n      if (status === 201) {\n        console.log(`${status} in the create tweeet`);\n        tempTweet.unshift(response);\n      }\n      else {\n        alert(\"Error occured while posting tweet\");\n        console.log(response);\n      }\n    })\n    setNewTweets(tempTweet);\n    textAreaRef.current.value = \"\";\n  };\n  return (\n    <div>\n      <form className=\"my-5\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <textarea\n            ref={textAreaRef}\n            required\n            className=\"form-control\"\n          ></textarea>\n        </div>\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Tweet Now\n          </button>\n        </div>\n      </form>\n      <TweetsList newTweets={newTweets} />\n    </div>\n  );\n}\n\nexport function TweetsList(props) {\n  console.log(\"calling tweet list\")\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          console.log(\"possibly you didn't start the server\");\n          alert(\"There was an error, ok-\", status);\n        }\n      };\n      listTweet(myCallback);\n    }\n  }, [setTweetsInit, tweetsDidSet, setTweetsDidSet]);\n  return tweets.map((tweet, index) => {\n    return (\n      <Tweet\n        tweet={tweet}\n        className=\"my-5 py-5 border bg-white col-10\"\n        key={index}\n      />\n    );\n  });\n}\n\nexport function ActionBtn(props) {\n  const { tweet, action } = props;\n  const [likes, setLikes] = useState(tweet.likes);\n  const [justClicked, setJustClicked] = useState(\n    tweet.userLike === true ? true : false\n  );\n  const handleClick = (event) => {\n    event.preventDefault();\n    if (action.type === \"like\") {\n      if (justClicked === false) {\n        setJustClicked(true);\n        setLikes(likes + 1);\n      } else {\n        setJustClicked(false);\n        setLikes(likes - 1);\n      }\n    }\n  };\n\n  const display =\n    action.type === \"like\" ? `${likes} Likes` : `${action.display}`;\n  return (\n    <button onClick={handleClick} className=\"btn btn-primary\">\n      {display}\n    </button>\n  );\n}\n\nexport function Tweet(props) {\n  const tweet = props.tweet;\n  const className = props.className;\n  return (\n    <div className={className}>\n      <p className=\"text-dark\">{tweet.context}</p>\n      <div className=\"btn btn-group\">\n        <ActionBtn tweet={tweet} action={{ type: \"like\", display: \"Likes\" }} />\n        <ActionBtn\n          tweet={tweet}\n          action={{ type: \"unlike\", display: \"Unlike\" }}\n        />\n        <ActionBtn\n          tweet={tweet}\n          action={{ type: \"retweet\", display: \"Retweet\" }}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}